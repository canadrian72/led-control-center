name: Linux/Arm64 Docker CI

on:
  push:
    branches:
      - master
      - feature/arm64/*
      - bug/arm64/*

  pull_request:
    branches:
      - master

jobs:
  lighting-service:
    name: Lighting Service

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.JULIAN_DOCKER_HUB_TOKEN }}
      - name: Build and push Lighting Service
        run: |
          docker buildx build --platform linux/arm64 --tag ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}/iot-control-center:lighting-service --push Service.Lighting

  power-service:
    name: Power Service

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.JULIAN_DOCKER_HUB_TOKEN }}
      - name: Build and push Power Service
        run: |
          docker buildx build --platform linux/arm64 --tag ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}/iot-control-center:power-service --push Service.Power


  device-service:
    name: Device Manager Service

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.JULIAN_DOCKER_HUB_TOKEN }}
      - name: Build and push Device Service
        run: |
          docker buildx build --platform linux/arm64 --tag ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}/iot-control-center:device-service --push Service.Device

  display-service:
    name: Display Service

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.JULIAN_DOCKER_HUB_TOKEN }}
      - name: Build and push Display Service
        run: |
          docker buildx build --platform linux/arm64 --tag ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}/iot-control-center:display-service --push Service.Display

  scene-service:
    name: Scene Service

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.JULIAN_DOCKER_HUB_TOKEN }}
      - name: Build and push Scene Service
        run: |
          docker buildx build --platform linux/arm64 --tag ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}/iot-control-center:scene-service --push Service.Scene

  media-drive-service:
    name: Media Drive Service

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.JULIAN_DOCKER_HUB_TOKEN }}
      - name: Build and push Media Drive Service
        run: |
          docker buildx build --platform linux/arm64 --tag ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}/iot-control-center:media-drive-service --push Service.MediaDrive


  ui:
    name: UI

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.JULIAN_DOCKER_HUB_TOKEN }}
      - name: Build and push Ui
        run: |
          docker buildx build --platform linux/arm64 --tag ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}/iot-control-center:ui --push Ui

  kasa-bulb-controller:
    name: Kasa Bulb Controller

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.JULIAN_DOCKER_HUB_TOKEN }}
      - name: Build and push Kasa Bulb Controller
        run: |
          docker buildx build --platform linux/arm64 --tag ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}/iot-control-center:kasa-bulb-controller --push Controller.KasaBulb

  kasa-led-strip-controller:
    name: Kasa LED Strip Controller

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.JULIAN_DOCKER_HUB_TOKEN }}
      - name: Build and push Kasa LED Strip Controller
        run: |
          docker buildx build --platform linux/arm64 --tag ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}/iot-control-center:kasa-led-strip-controller --push Controller.KasaLedStrip

  kasa-plug-controller:
    name: Kasa Plug Controller

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.JULIAN_DOCKER_HUB_TOKEN }}
      - name: Build and push Kasa Plug Controller
        run: |
          docker buildx build --platform linux/arm64 --tag ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}/iot-control-center:kasa-plug-controller --push Controller.KasaPlug

  chromecast-controller:
    name: Chromecast Controller

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.JULIAN_DOCKER_HUB_TOKEN }}
      - name: Build and push Chromecast Controller
        run: |
          docker buildx build --platform linux/arm64 --tag ${{ secrets.JULIAN_DOCKER_HUB_USERNAME }}/iot-control-center:chromecast-controller --push Controller.Chromecast


